class A{constructor(b){this.GDB=b,this.worker=b.worker,this.index={},this.indexFileName=`${b.name}_inverted_index.json`,this.saveDebounced=this.debounce(()=>this.saveIndexToOPFS(),200),this.ready=this.loadIndexFromOPFS().then((w)=>{if(!w)this.rebuildIndexFromGraph();this.subscribeToGraph()})}debounce(b,w){let m;return(...q)=>{clearTimeout(m),m=setTimeout(()=>b.apply(this,q),w)}}async loadIndexFromOPFS(){try{const b=await new Promise((w,m)=>{const q=(T)=>{if(T.data.type==="loaded"&&T.data.name===this.indexFileName)this.worker.removeEventListener("message",q),w(new Uint8Array(T.data.data));else if(T.data.type==="error")this.worker.removeEventListener("message",q),m(new Error(T.data.message))};this.worker.addEventListener("message",q),this.worker.postMessage({type:"load",name:this.indexFileName})});if(b.byteLength>0)return this.index=JSON.parse((new TextDecoder()).decode(b)),!0}catch{}return!1}async saveIndexToOPFS(){try{const b=(new TextEncoder()).encode(JSON.stringify(this.index));await new Promise((w,m)=>{const q=(T)=>{if(T.data.type==="saved"&&T.data.name===this.indexFileName)this.worker.removeEventListener("message",q),w();else if(T.data.type==="error")this.worker.removeEventListener("message",q),m(new Error(T.data.message))};this.worker.addEventListener("message",q),this.worker.postMessage({type:"save",name:this.indexFileName,content:b})})}catch{}}async rebuildIndexFromGraph(){(await this.GDB.getAllNodes()).forEach((w)=>this.updateIndex(w.id,w.value,"insert",!1)),this.saveDebounced()}subscribeToGraph(){this.GDB.map({realtime:!0},(b)=>{if(b.action==="added"||b.action==="updated")this.updateIndex(b.id,b.value,"insert",!0);else if(b.action==="removed")this.updateIndex(b.id,b.value,"remove",!0)})}updateIndex(b,w,m="insert",q=!0){const T=this.extractPrefixes(w);if(m==="insert")T.forEach((z)=>{if(!this.index[z])this.index[z]=[];if(!this.index[z].includes(b))this.index[z].push(b)});else if(m==="remove")T.forEach((z)=>{if(this.index[z]){if(this.index[z]=this.index[z].filter((C)=>C!==b),this.index[z].length===0)delete this.index[z]}});if(q)this.saveDebounced()}extractPrefixes(b){if(typeof b==="string")return Array.from({length:b.length},(w,m)=>b.substring(0,m+1));if(typeof b==="number")return[String(b)];if(typeof b==="object"&&b!==null)return Object.keys(b);return[]}searchAllByPrefix(b){return Object.keys(this.index).filter((w)=>w.startsWith(b)).flatMap((w)=>this.index[w])}}var E=(b)=>{const w=new A(b);return b.searchByPrefix=async(m)=>{return await w.ready,w.searchAllByPrefix(m).map((T)=>b.graph.get(T))},b};export{E as init,A as default};
