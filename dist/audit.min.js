async function C(h){try{const j=await fetch("https://text.pollinations.ai/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({messages:[{role:"system",content:"You are an assistant specialized in analyzing Oplog data."},{role:"user",content:h}],model:"openai",seed:Math.floor(Math.random()*1000),jsonMode:!0})});if(!j.ok)throw new Error(`Pollinations API error: ${j.statusText}`);const S=await j.json();try{return typeof S==="string"?JSON.parse(S):S}catch{return S}}catch($){throw console.error("Error processing prompt with API:",$.message),$}}function H(h,$,j={}){console.log("\uD83E\uDDE0 AI Audit module loaded."),console.log(`\uD83E\uDDE0 AI Audit Prompt: \x1B[32m${j.prompt}\x1B[0m`);let S=null;function z(v){if(S)S();S=((h.map?.(({id:w,value:G,action:x})=>{if(console.log(x),x==="added"||x==="updated"||x==="initial")F(h,v)}))??{unsubscribe:()=>{}}).unsubscribe}return z(j.prompt),{stop:()=>S?.()}}var B=(h,$=500)=>{let j;return(...S)=>{clearTimeout(j),j=setTimeout(()=>h(...S),$)}},E=async(h,$="detect offensive or inappropriate language, spam [find closely spaced timestamps] or prohibited content")=>{console.log("\uD83D\uDEE1\uFE0F Audit: analizing Oplog data");const j=h.oplog.getDelta(null),S=[];for(let k of j)try{const{result:w}=await h.get(k.id);if(w&&w.value)S.push({id:k.id,timestamp:k.timestamp,type:k.type,value:w.value})}catch(w){}const z=`
      Rules:
      - Generate ONLY a valid JSON object whose identifiers have been proposed.

      Prompt: "${$}"
      Elements to analyze: "${JSON.stringify(S)}" (only upserted nodes)
      
      Evaluate each task. 
      For each object:
      - Include the object's ID in the output list **only if it meets the conditions of the audit prompt**.
      - Do not modify the objects.

      Strict JSON output format:
      list: [
        { "id": "<id>" },
        ...
      ]
    `,v=await C(z);if(v.list&&Array.isArray(v.list))for(let k of v.list){const w=k.id??k;h.remove?.(w),h.oplog?.remove?.(w),console.log(`\uD83D\uDEE1\uFE0F Audit: Node deleted by audit \u2192 ${w}`)}},F=B(E,500);export{H as init,B as debounce};
