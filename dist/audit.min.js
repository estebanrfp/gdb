async function E(v){try{const x=await fetch("https://text.pollinations.ai/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({messages:[{role:"system",content:"You are an assistant specialized in analyzing Oplog data."},{role:"user",content:v}],model:"openai",seed:Math.floor(Math.random()*1000),jsonMode:!0})});if(!x.ok)throw new Error(`Pollinations API error: ${x.statusText}`);const h=await x.json();try{return typeof h==="string"?JSON.parse(h):h}catch{return h}}catch(j){throw console.error("Error processing prompt with API:",j.message),j}}function J(v,j,x={}){console.log("\uD83E\uDDE0 AI Audit module loaded."),console.log(`\uD83E\uDDE0 AI Audit Prompt: \x1B[32m${x.prompt}\x1B[0m`);let h=null;function B(w){if(h)h();h=((v.map?.(({id:S,value:H,action:z})=>{if(console.log(z),z==="added"||z==="updated"||z==="initial")G(v,w)}))??{unsubscribe:()=>{}}).unsubscribe}return B(x.prompt),{stop:()=>h?.()}}var C=(v,j=500)=>{let x;return(...h)=>{clearTimeout(x),x=setTimeout(()=>v(...h),j)}},F=async(v,j="detect offensive or inappropriate language, spam [find closely spaced timestamps] or prohibited content")=>{console.log("\uD83D\uDEE1\uFE0F Audit: analizing Oplog data");const x=v.oplog.getDelta(null),h=[];for(let k of x)try{const{result:S}=await v.get(k.id);if(S&&S.value)h.push({id:k.id,timestamp:k.timestamp,type:k.type,value:S.value})}catch(S){}const B=`
      Rules:
      - Generate ONLY a valid JSON object whose identifiers have been proposed.

      Prompt: "${j}"
      Elements to analyze: "${JSON.stringify(h)}" (only upserted nodes)
      
      Evaluate each task. 
      For each object:
      - Include the object's ID in the output list **only if it meets the conditions of the audit prompt**.
      - Do not modify the objects.

      Strict JSON output format:
      list: [
        { "id": "<id>" },
        ...
      ]
    `,w=await E(B);if(w.list&&Array.isArray(w.list))for(let k of w.list){const S=k.id??k;v.remove?.(S),v.oplog?.remove?.(S),console.log(`\uD83D\uDEE1\uFE0F Audit: Node deleted by audit \u2192 ${S}`)}},G=C(F,500);export{J as init,C as debounce};
