function O(w){if(typeof w!=="object"||w===null)throw new Error("Los roles personalizados deben ser un objeto v\xE1lido.");F=w}function H(w,q,j=new Set){const z=F;if(!z[w])return!1;if(j.has(w))return!1;if(j.add(w),z[w].can.includes(q))return!0;if(z[w].inherits)return z[w].inherits.some((B)=>H(B,q,j));return!1}async function Q(){if(typeof window.ethereum==="undefined")throw new Error("Por favor, instala Metamask para continuar.");await window.ethereum.request({method:"eth_requestAccounts"});const q=(await window.ethereum.request({method:"eth_accounts"}))[0],j=`Inicia sesi\xF3n en GraphDB - ${Date.now()}`,z=await window.ethereum.request({method:"personal_sign",params:[j,q]});return{userAddress:q,message:j,signature:z}}async function S(w,q,j,z=null){if(await w.ready,!F[j])throw new Error(`El rol '${j}' no existe.`);const B=`user:${q}`,E=w.graph.get(B),G={role:j,expiresAt:z?new Date(z).toISOString():null};if(!E)w.graph.insert(B,G);else E.value=G,E.timestamp=Date.now();await w.saveGraphToOPFS(),console.log(`Rol '${j}' asignado al usuario '${q}'${z?` con caducidad en ${z}`:""}.`)}async function I(){if(typeof window.ethereum==="undefined")throw new Error("Metamask no est\xE1 instalado o no est\xE1 conectado.");const w=await window.ethereum.request({method:"eth_requestAccounts"});if(w.length===0)throw new Error("No hay cuentas conectadas en Metamask.");return w[0]}async function J(w,q){const j=`user:${q}`,z=w.graph.get(j);if(!z)throw new Error("No tienes un rol asignado.");if(z.value.expiresAt&&new Date(z.value.expiresAt)<new Date)throw new Error("Tu rol ha caducado.");return z.value.role}async function L(w,q,j){const z=await J(w,q);if(!H(z,j))throw new Error(`No tienes permiso para realizar la operaci\xF3n '${j}'.`)}async function T(w,q,j){let z=await I();return await L(w,z,q),z}var F={superadmin:{can:["assignRole"],inherits:["admin"]},admin:{can:["delete"],inherits:["manager"]},manager:{can:["publish"],inherits:["user"]},user:{can:["write"],inherits:["guest"]},guest:{can:["read"]}};export{O as setCustomRoles,T as executeWithPermission,H as can,Q as authenticateWithMetamask,S as assignRole};
